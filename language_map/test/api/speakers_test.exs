defmodule LanguageMap.Test.Api.SpeakersTest do
  use Plug.Test
  use ExUnit.Case

  alias LanguageMap.APIRouter
  alias LanguageMap.Repo
  alias LanguageMap.Schemas.{
    Citizenship,
    English,
    Language,
    Person,
    Puma,
    State,
  }

  @opts APIRouter.init([])

  setup do
    # Set state of database for all tests
    :ok = Ecto.Adapters.SQL.Sandbox.checkout(Repo)
    # Populate tables with data
    Repo.insert_all(Language, [
      %{
        id: 1210,
        name: "Portuguese",
      },
      %{
        id: 1675,
        name: "Turkish",
      },
    ])
    Repo.insert_all(English, [
      %{
        id: 1,
        speaking_ability: "Fluent",
      },
      %{
        id: 2,
        speaking_ability: "Proficient",
      },
    ])
    Repo.insert_all(Citizenship, [
      %{
        id: 1,
        status: "Citizen",
      },
      %{
        id: 2,
        status: "Non-citizen",
      },
    ])
    Repo.insert_all(State, [
      %{
        statefp: "42",
        name: "Pennsylvania",
        geom: %Geo.MultiPolygon{
          coordinates: [[[{-80.519891,40.906661},{-80.519425,41.977523},{-80.188085,42.094257},{-80.108476,42.16924},{-80.066169,42.171882},{-80.080028,42.163625},{-80.06108,42.144857},{-79.761951,42.26986},{-79.761374,41.999067},{-75.359579,41.999445},{-75.312817,41.950182},{-75.293713,41.954593},{-75.279094,41.938917},{-75.260527,41.8638},{-75.185254,41.85993},{-75.170565,41.871608},{-75.161541,41.849836},{-75.115598,41.844638},{-75.113334,41.822782},{-75.072172,41.813732},{-75.10464,41.774203},{-75.053431,41.752538},{-75.049862,41.713309},{-75.06883,41.708161},{-75.052736,41.688393},{-75.044224,41.617978},{-75.074613,41.605711},{-75.018524,41.551802},{-75.024757,41.535099},{-75.003151,41.508101},{-74.984372,41.506611},{-74.983341,41.480894},{-74.912517,41.475605},{-74.890358,41.455324},{-74.893913,41.43893},{-74.858578,41.444427},{-74.830671,41.430503},{-74.807582,41.442847},{-74.790417,41.42166},{-74.738455,41.430641},{-74.738554,41.401191},{-74.689516,41.363843},{-74.79504,41.320407},{-74.857151,41.248975},{-74.882139,41.180836},{-74.991718,41.092284},{-74.968389,41.087797},{-75.011133,41.067521},{-75.025777,41.039806},{-75.130575,40.991093},{-75.13378,40.970973},{-75.051029,40.865662},{-75.066014,40.847591},{-75.095784,40.847082},{-75.083929,40.824471},{-75.108505,40.791094},{-75.1344,40.773765},{-75.171587,40.777745},{-75.196533,40.751631},{-75.182084,40.731522},{-75.20392,40.691498},{-75.176803,40.675715},{-75.200452,40.649219},{-75.192352,40.574257},{-75.117292,40.573211},{-75.068615,40.542223},{-75.058848,40.418065},{-74.965508,40.397337},{-74.939711,40.338006},{-74.868209,40.295207},{-74.842308,40.250508},{-74.77136,40.215399},{-74.724304,40.14701},{-74.782106,40.12081},{-74.822307,40.12671},{-74.860909,40.08371},{-74.944412,40.063211},{-75.04709,40.009941},{-75.075605,39.978041},{-75.12692,39.961112},{-75.12792,39.911813},{-75.145421,39.884213},{-75.243431,39.854597},{-75.341765,39.846082},{-75.415062,39.801919},{-75.518444,39.836311},{-75.634706,39.830164},{-75.716969,39.791998},{-75.773786,39.7222},{-80.519342,39.721403},{-80.519891,40.906661}]]],
          srid: 4326
        },
      },
      %{
        statefp: "34",
        name: "New Jersey",
        geom: %Geo.MultiPolygon{
          coordinates: [[[{-75.559102,39.629056},{-75.47764,39.715013},{-75.450688,39.775064},{-75.3544,39.839917},{-75.145421,39.884213},{-75.12792,39.911813},{-75.12692,39.961112},{-75.075605,39.978041},{-75.04709,40.009941},{-74.944412,40.063211},{-74.860909,40.08371},{-74.822307,40.12671},{-74.782106,40.12081},{-74.722604,40.15001},{-74.77136,40.215399},{-74.842308,40.250508},{-74.868209,40.295207},{-74.939711,40.338006},{-74.965508,40.397337},{-75.058848,40.418065},{-75.068615,40.542223},{-75.117292,40.573211},{-75.183151,40.567354},{-75.201812,40.617188},{-75.188579,40.624628},{-75.200452,40.649219},{-75.176803,40.675715},{-75.20392,40.691498},{-75.182084,40.731522},{-75.196533,40.751631},{-75.171587,40.777745},{-75.1344,40.773765},{-75.108505,40.791094},{-75.083929,40.824471},{-75.095784,40.847082},{-75.066014,40.847591},{-75.051029,40.865662},{-75.13378,40.970973},{-75.130575,40.991093},{-75.025777,41.039806},{-75.011133,41.067521},{-74.968389,41.087797},{-74.991718,41.092284},{-74.882139,41.180836},{-74.857151,41.248975},{-74.79504,41.320407},{-74.694914,41.357423},{-73.893979,40.997197},{-73.929006,40.889578},{-74.013784,40.756601},{-74.024543,40.709436},{-74.093253,40.648926},{-74.189106,40.643832},{-74.214469,40.565019},{-74.25226,40.55274},{-74.249171,40.523297},{-74.27269,40.488405},{-74.261889,40.464706},{-74.205915,40.439285},{-74.180673,40.457977},{-74.133658,40.456778},{-74.000795,40.41155},{-73.991682,40.442908},{-74.02076,40.475222},{-74.005057,40.482996},{-73.981017,40.443053},{-73.977442,40.299373},{-74.063807,39.97886},{-74.094032,39.757982},{-74.240506,39.554911},{-74.294991,39.501758},{-74.323833,39.507808},{-74.311918,39.479895},{-74.328561,39.43965},{-74.412692,39.360816},{-74.552597,39.300143},{-74.560531,39.277804},{-74.613534,39.244679},{-74.714341,39.119804},{-74.705876,39.102937},{-74.792248,39.012495},{-74.792723,38.991991},{-74.864458,38.94041},{-74.967274,38.933413},{-74.955363,39.001262},{-74.897784,39.098811},{-74.887167,39.158825},{-74.954129,39.190173},{-75.028885,39.19456},{-75.029795,39.225466},{-75.107427,39.218354},{-75.136914,39.182088},{-75.151405,39.189996},{-75.170444,39.234643},{-75.241639,39.274097},{-75.251699,39.300341},{-75.283013,39.305467},{-75.288306,39.291602},{-75.333743,39.345335},{-75.364389,39.341574},{-75.399304,39.37949},{-75.427826,39.387792},{-75.465212,39.43893},{-75.536431,39.460559},{-75.534014,39.540702},{-75.511531,39.577177},{-75.553502,39.602},{-75.559102,39.629056}]]],
          srid: 4326
        }
      },
    ])
    Repo.insert_all(Puma, [
      %{
        geoid10: "4203211",
        statefp10: "42",
        name10: "South Philly",
      },
      %{
        geoid10: "4203208",
        statefp10: "42",
        name10: "West Philly",
      },
      %{
        geoid10: "3402101",
        statefp10: "34",
        name10: "Camden",
      },
    ])
    Repo.insert_all(Person, [
      # PA residents
      %{
        age: 10,
        weight: 2,
        english_id: 1,
        language_id: 1210,
        citizenship_id: 1,
        state_id: "42",
        geo_id: "4203211",
      },
      %{
        age: 11,
        weight: 1,
        english_id: 1,
        language_id: 1210,
        citizenship_id: 1,
        state_id: "42",
        geo_id: "4203208",
      },
      %{
        age: 12,
        weight: 3,
        english_id: 1,
        language_id: 1675,
        citizenship_id: 1,
        state_id: "42",
        geo_id: "4203208",
      },
      # NJ residents
      %{
        age: 20,
        weight: 1,
        english_id: 1,
        language_id: 1675,
        citizenship_id: 1,
        state_id: "34",
        geo_id: "4203211",
      },
    ])
    # Recreate materialized view
    # NOTE: This is weird and brittle, but the easiest way to do it for now.
    #       Migrations are run before tests but before data has been added to
    #       the database, so the migrations that create materialized views
    #       end up creating empty mat views, which is why they're recreated
    #       here.
    Ecto.Adapters.SQL.query!(Repo, "DROP MATERIALIZED VIEW people_state_summary", []);
    Ecto.Adapters.SQL.query!(Repo, """
      CREATE MATERIALIZED VIEW people_state_summary AS
      SELECT state_id, age, citizenship_id, english_id, language_id, sum(weight) as sum_weight
      FROM people
      GROUP BY state_id, age, citizenship_id, english_id, language_id;
    """, [])
    :ok
  end

  test "get all portuguese speakers in tri-state area" do
    conn =
      conn(:get, "/speakers/?level=state&boundingBox=-76.52114868164064,39.35659979720227,-73.88442993164064,40.35805621890491&language=1210")
      |> APIRouter.call(@opts)

    assert conn.state == :sent
    assert conn.status == 200
    assert Poison.decode!(conn.resp_body) == %{
      "success" => true,
      "results" => [
        %{
          "sum_weight" => nil,
          "id" => "34",
          "percentage" => nil,
        },
        %{
          "sum_weight" => 3.0,
          "id" => "42",
          "percentage" => 0.5,
        },
      ]
    }
  end
end
